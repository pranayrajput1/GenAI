steps:
  - name: Checkout code
    uses: actions/checkout@v2

  - name: Get latest commit information
    id: latest commit
    run: |
      latest_commit_message=$(git log -1 --pretty=%B)
      echo "::set-output name=commit_message::$latest_commit_message"

  # Install dependencies
  - name: 'python:3.8'
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]

  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '--no-cache', '-t', 'us-central1-docker.pkg.dev/nashtech-ai-dev-389315/clustering-pipeline/db-scan-image-${{steps.latest_commit.outputs.commit_message}}:0.0.1', '.' ]
    id: 'build'

  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'us-central1-docker.pkg.dev/nashtech-ai-dev-389315/clustering-pipeline/db-scan-image-${{steps.latest_commit.outputs.commit_message}}:0.0.1' ]
    id: 'push'
    waitFor: ['build']

  # Compile pipeline
  - name: 'python:3.8'
    entrypoint: 'python'
    args: ['pipeline.py']
    id: 'compile'
    waitFor: ['push']

  # Upload compiled pipeline to GCS.
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['cp', 'dbscan_pipeline.json', 'gs://nashtech_vertex_ai_artifact']
    id:  'upload'
    waitFor: ['compile']

  # Trigger and create the pipeline
  - name: 'python:3.8'
    entrypoint: 'python'
    args: ['pipeline_run.py']
    id: 'run_pipeline'
    waitFor: ['upload']
options:
  logging: CLOUD_LOGGING_ONLY
